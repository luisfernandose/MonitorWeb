@model Queue.Models.DashBoardStats
@{ ViewBag.Title = "Home Page"; }
@{ var ListUser = new List<SelectListItem>
                         () { new SelectListItem() { Text = "Todos", Value = "Todos", Selected = true }, };

    foreach (var item in ViewBag.ListUser)
    {
        ListUser.Add(item);
    } }
<!-- chartist CSS -->
<link href="~/TemplateAssets/assets/plugins/chartist-js/dist/chartist.min.css" rel="stylesheet">
<link href="~/TemplateAssets/assets/plugins/chartist-js/dist/chartist-init.css" rel="stylesheet">
<link href="~/TemplateAssets/assets/plugins/chartist-plugin-tooltip-master/dist/chartist-plugin-tooltip.css" rel="stylesheet">
<link href="~/TemplateAssets/assets/plugins/css-chart/css-chart.css" rel="stylesheet">
<link href="~/TemplateAssets/assets/plugins/vectormap/jquery-jvectormap-2.0.2.css" rel="stylesheet" />
<link href="~/TemplateAssets/assets/plugins/morrisjs/morris.css" rel="stylesheet">
<link href="~/TemplateAssets/bootstrap-switch/switch.css" rel="stylesheet" />


<!--This page css - Morris CSS -->
<link href="~/TemplateAssets/assets/plugins/c3-master/c3.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js" type="text/javascript"></script>
<script src="~/Scripts/c3.min.js"></script>
<script src="~/Scripts/d3.min.js"></script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script src="~/Scripts/moment-with-locales.js"></script>
<script src="~/Scripts/jquery.loading.js"></script>

<div class="row" id="dashboard">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">

                <h1>Filtros</h1>
                @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { id = "frm_register" }))
                {
                    <div class="row">
                        <div class="col-lg-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DateFrom, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DateFrom, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.DateFrom, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DateTo, htmlAttributes: new { @class = "control-label col-md-12" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.DateTo, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.DateTo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-3">
                            <label asp-for="idgroup" class="control-label">Grupos</label>
                            <span asp-validation-for="idgroup" class="text-danger"></span>
                            @Html.DropDownList("idgroup", null, htmlAttributes: new { @class = "form-control", autocomplete = "off" })
                            <br />
                        </div>

                        <div class="col-lg-3">
                            <label>Empleados</label>
                            <div class="input-group">
                                @Html.DropDownList("ddlUsers", ListUser, "", new { @class = "form-control select2", style = "width:100%;" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-10">
                        </div>
                        <div class="col-lg-2">
                            <br />
                            <div class="d-flex flex-row-reverse">
                                <button id="add_Employee" name="add_dictionary" type="submit" value="Create" class="btn btn-info waves-effect waves-light btn-block">
                                    Filtrar
                                </button>
                            </div>
                        </div>
                    </div>
                }

                <div class="row">

                </div>
                <br />
                <br />
                <br />
                <div class="row">
                    <div class="col-lg-9">
                        <h1>Resumen del Día</h1>
                        <br />
                    </div>
                    <div class="col-lg-2">
                        <input type="button" id="create_pdf" class="btn btn-info waves-effect waves-light btn-block" value="Generate PDF">
                    </div>
                </div>

                <br />
                <br />
                <div class="row">
                    <div class="col-xl-3 col-md-3 col-lg-3">
                        <div style="background-color: #55CBCD !important" class="flexbox flex-justified text-center bg-success mb-30 pull-up">
                            <div class="no-shrink py-20">
                                <span class="mdi mdi-clock-out font-size-50"></span>
                            </div>
                            <div class="py-30 bg-white text-dark">
                                <div class="font-size-20 countnm">@Model.resume.ProductiveTime %</div>
                                <span>Productivo</span>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-3 col-md-3 col-lg-3">
                        <div style="background-color: #FF968A !important" class="flexbox flex-justified text-center bg-danger mb-30 pull-up">
                            <div class="no-shrink py-20">
                                <span class="mdi mdi-clock-in font-size-50"></span>
                            </div>
                            <div class="py-30 bg-white text-dark">
                                <div class="font-size-20 countnm">@Model.resume.ImproductiveTime %</div>
                                <span>Improductivo</span>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-3 col-md-3 col-lg-3">
                        <div style="background-color: #96B3C2 !important" class="flexbox flex-justified text-center bg-warning mb-30 pull-up">
                            <div class="no-shrink py-20">
                                <span class="mdi mdi-clock-end font-size-50"></span>
                            </div>
                            <div class="py-30 bg-white text-dark">
                                <div class="font-size-20 countnm">@Model.resume.NeutralTime %</div>
                                <span>Neutral</span>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-3 col-md-3 col-lg-3">
                        <div style="background-color:gray !important" class="flexbox flex-justified text-center mb-30 pull-up">
                            <div class="no-shrink py-20">
                                <span style="color:white" class="mdi mdi-cancel font-size-50"></span>
                            </div>
                            <div class="py-30 bg-white text-dark">
                                <div class="font-size-20 countnm">@Model.resume.UnclasifyTime %</div>
                                <span>Sin Clasificar</span>
                            </div>
                        </div>
                    </div>
                </div>
                <br />


                <div class="col-12 col-lg-12">
                    <div class="box">
                        <div class="box-header with-border">
                            <h4 class="box-title">Detalle por usuario</h4>
                            @*<h6 class="box-subtitle">List of ticket opend by customers</h6>*@
                        </div>
                        <div class="box-body p-15">
                            <div class="table-responsive">
                                <table id="tickets" class="table mt-0 table-hover no-wrap table-bordered" data-page-size="10">
                                    <thead>
                                        <tr>
                                            <th>Usuario</th>
                                            <th>Horas Productivas</th>
                                            <th>Horas Improductivas</th>
                                            <th>Horas Neutrales</th>
                                            <th>Horas No Clasificadas</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DataPerUser)
                                        {
                                            <tr>
                                                <td>@item.User</td>
                                                <td>@item.ProductiveTime.ToString("0.0#")</td>
                                                <td>@item.ImproductiveTime.ToString("0.0#")</td>
                                                <td>@item.NeutralTime.ToString("0.0#")</td>
                                                <td>@item.UnclasifyTime.ToString("0.0#")</td>
                                                <td>@item.TotalHours.ToString("0.0#")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="chart_wrap">
                    <div id="columnchart_values"></div>
                    <br />
                </div>

            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.min.js"></script>
<script type="text/javascript" src="https://html2canvas.hertzen.com/dist/html2canvas.js"></script>
<script src="~/assets/plugins/general/moment/min/moment.min.js" type="text/javascript"></script>
<script src="~/js/DownloadsPDF.js"></script>
<script>
    google.charts.load("current", { packages: ['corechart'] });
    google.charts.setOnLoadCallback(drawChartApp);
    jQuery(document).ready(function () {
        $('#ddlUsers').select2({
            theme: "classic"
        });
        drawChartApp();
    });
    var ChartImproductive = null;
    function employeFilter() {
        if (!$("#btnempfilter").hasClass("active")) {
            $("#listaempleados").show();
        }
        else {
            $("#listaempleados").hide();
        }
        MoreUsedApp();
    }
    function drawChartApp() {
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Aplicación');
        data.addColumn('number', 'Porcentaje de Uso');
        data.addColumn({ type: 'string', role: 'style' });
        var datArrary = [];
        var datArrarycolors = [];
         var data_ = @Html.Raw(Json.Encode(Model.graph));
        $.each(data_, function (index, value) {
            datArrary.push([value.element, value.decimalvalue, value.color])
            datArrarycolors.push(value.color);
        });
        data.addRows(datArrary);
        var options = {
            title: "5 aplicaciones más usadas",
            titleTextStyle: {
                color: "black",               // color 'red' or '#cc00cc'
                fontName: "Nunito Sans",    // 'Times New Roman'
                fontSize: 20            // 12, 18
            },
            width: 600,
            height: 400,
            bar: { groupWidth: "95%" },
            legend: { position: "none" },
            //colors: ["gold", "silver", "blue", "red", "black"]
        };
        var chart = new google.visualization.ColumnChart(document.getElementById("columnchart_values"));
        chart.draw(data, options, { allowHtml: true });
    }
    function MoreUsedApp() {
        $.ajax({
            type: "GET",
            url: "/Home/MoreUsedApp",
            success: function (d) {
                var contador = 1;
                $("div#statslist").append("<div id='preload" + contador + "'><h2></h2></div> <div class='table-responsive'> <canvas id='Chart" + contador + "' width='50' height='350'></canvas> </div>");
                var divname = "div#preload" + contador + " h2";
                var chartname = "Chart" + contador
                var coloR = [];
                var dynamicColors = function () {
                    var r = Math.floor(Math.random() * 255);
                    var g = Math.floor(Math.random() * 255);
                    var b = Math.floor(Math.random() * 255);
                    return "rgb(" + r + "," + g + "," + b + ")";
                };
                var i;
                for (i = 0; i < d.data.length; i++) {
                    coloR.push(dynamicColors());
                }
                //$(divname).html("Aplicaciones Mas Usadas")
                var ctx = document.getElementById(chartname).getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: d.labels,
                        datasets: [{
                            label: d.group,
                            data: d.data,
                            backgroundColor: coloR,
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        legend: { display: false },
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            }
        });
    }
    $("input:radio[name=contact]").click(function () {
        var variable = $("input:radio[name=contact]:checked").val();
        switch (variable) {
            case 'Productivo':
                ReportSpedometer(variable)
                break;
            case 'Improductivo':
                ReportSpedometer(variable)
                break;
            case 'Neutro':
                ReportSpedometer(variable)
                break;
            default:
                break;
        }
    })
    async function ReportSpedometer(variable) {
        $.ajax({
            type: "GET",
            url: "/ReportApplications/GaugeChart",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                successFunc(response);
            },
        });
        function successFunc(jsondata) {
            switch (variable) {
                case 'Productivo':
                    var ratio = false;
                    var chart = c3.generate({
                        bindto: '#GaugeChart',
                        data: {
                            columns: [
                                ['Productivo', jsondata.Productivo]
                            ],
                            type: 'gauge',
                            onmouseover: function (d, i) {
                                console.log(d);
                            },
                        },
                        gauge: {
                            max: jsondata.Total,
                            //label: {
                            //    format: function (value, ratio) {
                            //        return value;
                            //    },
                            //    show: false
                            //    },
                            //units: ' %',
                            //label: false,
                            //show: false
                        },
                        color: {
                            pattern: ['#FF0000', '#F97600', '#ccff66'],
                        },
                    });
                    //setTimeout(function () {
                    //    chart.load({
                    //        columns: [
                    //            ['Female', jsondata.Male]
                    //        ]
                    //    });
                    //}, 1000);
                    //setTimeout(function () {
                    //    chart.load({
                    //        columns: [
                    //            ['Others', jsondata.Others]
                    //        ]
                    //    });
                    //}, 2000);
                    break;
                case 'Improductivo':
                    var ratio = false;
                    var chart = c3.generate({
                        bindto: '#GaugeChart',
                        data: {
                            columns: [
                                ['Improductivo', jsondata.Improductivo]
                            ],
                            type: 'gauge',
                            onmouseover: function (d, i) {
                                console.log(d);
                            },
                        },
                        gauge: {
                            max: jsondata.Total,
                            //label: {
                            //    format: function (value, ratio) {
                            //        return value;
                            //    },
                            //    show: false
                            //    },
                            //units: ' %',
                            //label: false,
                            //show: false
                        },
                        color: {
                            pattern: ['#FF0000', '#F97600', '#ccff66'],
                        },
                    });
                    //setTimeout(function () {
                    //    chart.load({
                    //        columns: [
                    //            ['Female', jsondata.Male]
                    //        ]
                    //    });
                    //}, 1000);
                    //setTimeout(function () {
                    //    chart.load({
                    //        columns: [
                    //            ['Others', jsondata.Others]
                    //        ]
                    //    });
                    //}, 2000);
                    break;
                case 'Neutro':
                    var ratio = false;
                    var chart = c3.generate({
                        bindto: '#GaugeChart',
                        data: {
                            columns: [
                                ['Neutro', jsondata.Neutro]
                            ],
                            type: 'gauge',
                            onmouseover: function (d, i) {
                                console.log(d);
                            },
                        },
                        gauge: {
                            max: jsondata.Total,
                            //label: {
                            //    format: function (value, ratio) {
                            //        return value;
                            //    },
                            //    show: false
                            //    },
                            //units: ' %',
                            //label: false,
                            //show: false
                        },
                        color: {
                            pattern: ['#FF0000', '#F97600', '#ccff66'],
                        },
                    });
                    //setTimeout(function () {
                    //    chart.load({
                    //        columns: [
                    //            ['Female', jsondata.Male]
                    //        ]
                    //    });
                    //}, 1000);
                    //setTimeout(function () {
                    //    chart.load({
                    //        columns: [
                    //            ['Others', jsondata.Others]
                    //        ]
                    //    });
                    //}, 2000);
                    break;
                default:
                    break;
            }
        }
    }
    function ReportImproductiveApplications(parameter) {
        $.ajax({
            type: "POST",
            url: "/ReportApplications/ChartImproductive",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(parameter),
            success: function (chData) {
                var aData = chData;
                var aLabels = aData[0];
                var aDatasets1 = aData[1];
                var dataT = {
                    labels: aLabels,
                    datasets: [{
                        label: "Aplicaciones",
                        data: aDatasets1,
                        fill: false,
                        display: false,
                        backgroundColor: ["rgba(54, 162, 235, 0.2)", "rgba(255, 99, 132, 0.2)", "rgba(255, 159, 64, 0.2)", "rgba(255, 205, 86, 0.2)", "rgba(75, 192, 192, 0.2)", "rgba(153, 102, 255, 0.2)", "rgba(201, 203, 207, 0.2)"],
                        borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                        borderWidth: 1
                    }]
                };
                if (ChartImproductive != null) {
                    ChartImproductive.destroy();
                }
                var ctx = $("#chartImproductive").get(0).getContext("2d");
                ChartImproductive = new Chart(ctx, {
                    type: 'bar',
                    data: dataT,
                    options: {
                        responsive: true,
                        title: { display: true, text: 'APLICACIONES MAS USADAS' },
                        legend: { position: 'bottom', display: false },
                        scales: {
                            xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' } }],
                            yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
                        },
                    }
                });
                ChartImproductive.update();
            }
        });
    }
    //$('#DateFrom').change(async function () {
    //    var parameter = {
    //        dateFrom: $("#DateFrom").val(),
    //        dateTo: $("#DateTo").val()
    //        //idDeparment: $("#Id").val(),
    //        //idUser: $("#ddlUser").val()
    //    };
    //    /*ReportMoreApplications(parameter);*/
    //    //ReportWebApplications(parameter);
    //    await ReportImproductiveApplications(parameter);
    //});
    //$('#DateTo').change(async function () {
    //    var parameter = {
    //        dateFrom: $("#DateFrom").val(),
    //        dateTo: $("#DateTo").val(),
    //        //idDeparment: $("#Id").val(),
    //        //idUser: $("#ddlUser").val()
    //    };
    //    /* ReportMoreApplications(parameter);*/
    //    //ReportWebApplications(parameter);
    //    await ReportImproductiveApplications(parameter);
    //})
</script>